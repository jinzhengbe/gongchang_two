import{H as y,r as v,I as h}from"./index-CP6BfJf4.js";const f=y.create({baseURL:"http://localhost:8080/api",timeout:1e4,headers:{"Content-Type":"application/json"}});function w(){const l=v(!1),o=v(null);return{loading:l,error:o,get:async(c,u)=>{try{return l.value=!0,o.value=null,(await f.get(c,{params:u})).data}catch(n){throw o.value=n instanceof Error?n.message:"An error occurred",n}finally{l.value=!1}},post:async(c,u)=>{try{return l.value=!0,o.value=null,(await f.post(c,u)).data}catch(n){throw o.value=n instanceof Error?n.message:"An error occurred",n}finally{l.value=!1}},put:async(c,u)=>{try{return l.value=!0,o.value=null,(await f.put(c,u)).data}catch(n){throw o.value=n instanceof Error?n.message:"An error occurred",n}finally{l.value=!1}},delete:async c=>{try{return l.value=!0,o.value=null,(await f.delete(c)).data}catch(u){throw o.value=u instanceof Error?u.message:"An error occurred",u}finally{l.value=!1}}}}const S=h("order",()=>{const l=w(),o=v([]),d=v(null),p=v(0),r=v(!1),a=v(null);return{orders:o,currentOrder:d,totalOrders:p,loading:r,error:a,fetchOrders:async t=>{r.value=!0,a.value=null;try{const e=await l.get("/orders",{params:t});o.value=e.data.items,p.value=e.data.total}catch(e){throw a.value="获取订单列表失败",e}finally{r.value=!1}},fetchHotOrders:async(t=6)=>{r.value=!0,a.value=null;try{return(await l.get("/orders/hot",{params:{limit:t}})).data}catch(e){throw a.value="获取热门订单失败",e}finally{r.value=!1}},getOrderById:async t=>{r.value=!0,a.value=null;try{const e=await l.get(`/orders/${t}`);return d.value=e.data,e.data}catch(e){throw a.value="获取订单详情失败",e}finally{r.value=!1}},createOrder:async t=>{r.value=!0,a.value=null;try{return(await l.post("/orders",t)).data}catch(e){throw a.value="创建订单失败",e}finally{r.value=!1}},updateOrderStatus:async(t,e)=>{var s;r.value=!0,a.value=null;try{const i=await l.patch(`/orders/${t}/status`,e);return((s=d.value)==null?void 0:s.id)===t&&(d.value=i.data),i.data}catch(i){throw a.value="更新订单状态失败",i}finally{r.value=!1}},deleteOrder:async t=>{var e;r.value=!0,a.value=null;try{await l.delete(`/orders/${t}`),o.value=o.value.filter(s=>s.id!==t),((e=d.value)==null?void 0:e.id)===t&&(d.value=null)}catch(s){throw a.value="删除订单失败",s}finally{r.value=!1}},uploadFile:async(t,e)=>{r.value=!0,a.value=null;try{const s=new FormData;return s.append("file",e),(await l.post(`/orders/${t}/files`,s,{headers:{"Content-Type":"multipart/form-data"}})).data}catch(s){throw a.value="上传文件失败",s}finally{r.value=!1}},downloadFile:async(t,e)=>{r.value=!0,a.value=null;try{return(await l.get(`/orders/${t}/files/${e}`,{responseType:"blob"})).data}catch(s){throw a.value="下载文件失败",s}finally{r.value=!1}},deleteFile:async(t,e)=>{r.value=!0,a.value=null;try{await l.delete(`/orders/${t}/files/${e}`)}catch(s){throw a.value="删除文件失败",s}finally{r.value=!1}}}});export{S as u};
